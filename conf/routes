# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET     /                           controllers.Application.index()

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               controllers.Assets.at(path="/public", file)

# User
GET     /users/login                controllers.UserApp.login()

# Boards
GET     /:projectName/boardList             controllers.BoardApp.boardList(projectName:String, pageNum:Int = 1, order:String ?= "desc", key ?= "id")
GET     /:projectName/boardList/:pageNum    controllers.BoardApp.boardList(projectName:String, pageNum:Int, order:String ?= "desc", key ?= "id")
GET     /:projectName/boards/new            controllers.BoardApp.newPost(projectName:String)
POST    /:projectName/boards/new            controllers.BoardApp.savePost(projectName:String)
GET     /:projectName/board/:id             controllers.BoardApp.post(projectName:String, id:Long)
POST    /:projectName/board/:id/replay      controllers.BoardApp.saveComment(projectName:String, id:Long)
GET     /:projectName/board/:id/delete      controllers.BoardApp.delete(projectName:String, id:Long)
GET     /:projectName/boards/:id/edit       controllers.BoardApp.editPost(projectName:String, id:Long)
POST    /:projectName/boards/:id/edit       controllers.BoardApp.updatePost(projectName:String, id:Long)

# Projects
GET	    /projects/new                   controllers.ProjectApp.newProject()
POST    /projects/new                   controllers.ProjectApp.saveProject()
GET     /project/:id                    controllers.ProjectApp.project(id:Long)
GET     /project/:id/setting            controllers.ProjectApp.setting(id:Long)
POST    /project/:id/setting   	        controllers.ProjectApp.saveSetting(id:Long)
GET     /project/:id/delete    	        controllers.ProjectApp.deleteProject(id:Long)
GET     /project/:id/memberList         controllers.ProjectApp.memberList(id:Long, noError:Boolean ?= true)
POST    /project/:id/memberList         controllers.ProjectApp.updateMember(userId:Long, id:Long)
POST    /project/:id/addMember          controllers.ProjectApp.addMember(id:Long)
GET     /project/:id/deleteMember       controllers.ProjectApp.deleteMember(userId:Long, id:Long)

#Milestones
GET     /project/:pId/milestones            controllers.MilestoneApp.milestones(pId:Long, state ?= "open", sort ?= "dueDate", direction ?= "asc")
GET     /project/:pId/milestones/manage     controllers.MilestoneApp.manageMilestones(pId:Long, sort ?= "dueDate", direction ?= "asc")
GET		/project/:pId/milestones/new        controllers.MilestoneApp.newMilestone(pId:Long)
POST	/project/:pId/milestones/new		controllers.MilestoneApp.createMilestone(pId:Long)
POST	/project/:pId/milestones/:id/save	controllers.MilestoneApp.updateMilestone(pId:Long, id: Long)
GET		/project/:pId/milestones/:id/delete controllers.MilestoneApp.deleteMilestone(pId:Long, id: Long)
GET	    /project/:pId/milestones/:id/edit   controllers.MilestoneApp.editMilestone(pId:Long, id: Long)

#Issues
GET     /:projectName/issueList	                controllers.IssueApp.list(projectName:String, pageNum:Int ?= 0, sortBy:String ?= "date", order:String ?= "desc", filter:String ?= "", stateType:String ?= "open", commentedCheck:Boolean ?= false, fileAttachedCheck:Boolean ?= false)
GET     /:projectName/issueList/:pageNum        controllers.IssueApp.list(projectName:String, pageNum:Int, sortBy:String ?= "date", order:String ?= "desc", filter:String ?= "", state:String ?= "open", commentedCheck:Boolean ?= false, fileAttachedCheck:Boolean ?= false)
GET		/:projectName/issues/new		        controllers.IssueApp.newIssue(projectName:String)
POST	/:projectName/issues/new				controllers.IssueApp.saveIssue(projectName:String)
GET     /:projectName/issues/:id                controllers.IssueApp.issue(projectName:String, id:Long)
POST    /:projectName/issue/:id/reply           controllers.IssueApp.saveComment(projectName:String, id:Long)
GET     /:projectName/issue/:id/delete          controllers.IssueApp.delete(projectName:String, id:Long)
GET		/:projectName/issueList/excel			controllers.IssueApp.extractExcelFile(projectName:String)


#Git
GET     /:projectName/info/refs                                        controllers.GitApp.advertise(projectName:String, service:String)
POST    /:projectName/$service<git-upload-pack|git-receive-pack>       controllers.GitApp.serviceRpc(projectName:String, service:String)

#
GET     /:projectName/code                                             controllers.CodeApp.view(projectName:String)
